<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="com.callor.gallery.persistance.ext.GalleryDao"> <!--  dao있는곳으로 바꾸기 -->
 
 	<!-- 최신글이 위로 올라오게. 날짜 역순 -->
 	<select id="selectAll" resultType="GalleryDTO">
 		SELECT * FROM tbl_gallery
 		ORDER BY g_date DESC, g_time DESC 
 	</select>
 	<select id="findById" resultType="GalleryDTO">
 		SELECT * FROM tbl_gallery
 		WHERE g_seq = #{g_seq}
 	</select>
 	
 	<!-- 
 	select된 결과를 DTO와 매칭하는 중간단계 RowMapper
 	id : table을 select 했을 때 PK로 지정된 값을 명시
 		property : DTO변수이름, clumn : SELECT된 칼럼이름, AS 된 칼럼 이름
 	result : PK가 아닌 칼럼들
 		property : DTO변수이름, clumn : SELECT된 칼럼이름, AS 된 칼럼 이름
 	 -->
 	<resultMap type="GalleryDTO" id="galleryDTOResultMap">
 		<id property="g_seq" column="g_seq"/>
  		<result column="g_writer" property="g_writer"/>
  		<result column="g_date" property="g_date"/>
  		<result column="g_time" property="g_time"/>
  		<result column="g_subject" property="g_subject"/>
  		<result column="g_content" property="g_content"/>
  		<result column="g_image" property="g_image"/>
  		<collection property="fileList" ofType="FileDTO">
  			<id property="file_seq" column="f_seq"></id>
  			<result property="file_original" column="f_original"/>
  			<result property="file_upname" column="f_upname"/>
  		</collection>
 	</resultMap>

	<sql id="selectGalleryAndFiles">
		SELECT 
			G.g_seq AS g_seq, 
			G.g_writer AS g_writer, 
		    G.g_date AS g_date, G.g_time AS g_time,
			G.g_subject AS g_subject, 
		    G.g_content AS g_content, 
		    G.g_image AS g_image,
		    
		    F.file_seq AS f_seq, 
		    F.file_original AS f_original, 
		    F.file_upname AS f_upname
		FROM tbl_gallery G
			LEFT JOIN tbl_files F
				ON G.g_seq = F.file_gseq
		WHERE G.g_seq = #{g_seq}
	</sql>
 	
 	<select id="findByIdGalleryFilesResultMap" resultMap="galleryDTOResultMap">
		<include refid="selectGalleryAndFiles">
			<property name="q_seq" value="${g_seq}"/>
		</include>
	</select> 	
 	
	<select id="findByIdGalleryFiles" resultType="GalleryFilesDTO">
		<include refid="selectGalleryAndFiles">
			<property name="q_seq" value="${g_seq}"/>
		</include>
	</select> 	
 	
 	<!-- 
 	insert, update tag에서는 selectKey라는 내부 tag를 사용할 수 있다.
 	insert, update 가 실행되기 전, 후에 다른 SQL문을 실행하고자 할 때
 	
 	insert를 수행한 후(order='AFTER')에 last_insert_id() 함수를 실행하여
 	GalleryDTO의 g_seq 칼럼에 값을 담아라
 	 -->
 	<insert id="insert" parameterType="GalleryDTO">
 		INSERT INTO tbl_gallery (
			g_writer, g_date, g_time,
			g_subject, g_content, g_image
		) VALUES (					
			#{g_writer}, #{g_date}, #{g_time},
			#{g_subject}, #{g_content}, #{g_image}
 		)
 		<selectKey keyProperty="g_seq" 
 					order="AFTER" 
 					resultType="Long">
 			SELECT LAST_INSERT_ID()
 		</selectKey>
 	</insert>
 	<update id="update"></update>
 	<delete id="delete"></delete>
 	
 	<!-- 
 	현재 프로젝트에서 프로젝트를 Run 하면
 	자동으로 table을 검사하여
 	table이 없으면 새로 생성하도록 작성
 	
 	DDL 명령(CREATE, DROP, ALTER)을 수행하면
 	Transaction이 완전히 무시된다.
 	
 	Transaction
 	한가지 일련의 작업(JOB)이 진행되는 과정에서 
 	다수의(2개 이상의) TABLE에 대하여 
 	SQL(DMM, CREATE: INSERT, UPDATE, DELETE))문이 실행되고
 	Table에 저장된 데이터에 변화가 생길때
 	JOB이 모두 정상적으로 수행되었을 때는 COMMIT을 하여 
 	데이터 변화를 완성하고
 	중간에 사소한 exception이라도 발생하면 모든 작업을 ROLLBACK하여
 	데이터 베이스의 무결성을 보장하는 한가지의 규칙이며 코드 작성 원칙
 	
 	Transaction이 진행되는 도중에 다른 task에서 
 	DDL이 실행되거나, TCL(Commit, Rollback)이 실행되면 
 	현재 Task에서 실행되는 Transaction이 무력화 되는 현상이 발생한다.
 	
 	mybatis에서는 공식적으로 mapper와 Dao를 활용하여
 	CREATE 등의 DDL 명령을 사용하는 것을 밝히지 않는다.
 	
 	(이런 문제가 있어서 mybatis에서 Transaction을 공식적으로... 사용하지않는다.)  
 	(그래도 우리는 한번해본다! 다른 뭔가에서는 이게 공식적으로 지원이된대)
 	 -->
 	<!-- IF EXISTS : 만약 tbl_allery 테이블이 없으면 생성해라! -->
 	<update id="create_tabel">
	 	CREATE TABLE IF NOT EXISTS tbl_gallery (
			g_seq	BIGINT	AUTO_INCREMENT	PRIMARY KEY,
			g_writer	VARCHAR(125)	NOT NULL,
			g_date	VARCHAR(10)	NOT NULL,
			g_time	VARCHAR(10)	NOT NULL,
			g_subject	VARCHAR(50)	NOT NULL,
			g_content	VARCHAR(1000)	NOT NULL,
			g_image	VARCHAR(256)
		)
 	</update>
 
 </mapper> 