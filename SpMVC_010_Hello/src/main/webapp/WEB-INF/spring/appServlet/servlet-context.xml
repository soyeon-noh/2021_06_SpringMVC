<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- 
		servlet-context.xml 파일에는 
		Controller 클래스 이후에 할 일들, 기능들 에 대한 설정이 있다.
	-->
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 
		클래스에 @Component 등등을 설정하였을 때
		Spring 컨테이너야 네가 좀 보관해줘 라는 설정
		 
	-->
	<annotation-driven />
	<!-- 
		localhost:8080/hello/static/*** 로 요청하면
		webapp/static 폴더에 잇는 파일 찾아라
		그리고 바로 response 하라
		이 요청은 Controller로 전달할 필요가 없다.
	 -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/static/**" location="/static/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 
		Spring 컨테이너가 클래스를 객체로 생성하여 보관하는데
		그때 생성된 객체들을 Web Project에서는 보통 bean 이라고 부른다.
		
		InternalResourceViewResolver 클래스를 사용하고 싶으니 
		bean로 만들어서 컨테이너에 보관해달라
		
		이 클래스에 어떤 method를 호출하려고 했더니 
		클래스 멤버변수(private) 중에 
		prefix라는 변수값과 suffix라는 변수값이 필요하더라
		
		그래서 미리 변수값을 setter 해 달라. 라고 지정하는 것
			= property로 저장한다.
		
	 -->
	 
	 <!-- 이거 reqController 같은거래!! 
	 Controller 에 return된걸 dispather..?가 가져가서 
	 요기 아래있는 class저기로 보내서 앞뒤에 아래 두세번째 줄 붙여서 forward 하는거다. -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!--  
	혹시 베이스 패키지 아래에 있는 (ex 주로 ontroller, service) 클래스중에 
	@로시작하는 스테리오 파일이 있으면 스캔해서 
	모두 component로 만들어라! (객체로 만들어라!)
	 -->
	 <!--
	 	component
	 	클래스를 객체로 선언하여 만들어둔 요소들.
	 	언제든지 사용할 준비가 된 상태
	 	
	 	scan을 할 때 scan 하지 않아도 될 클래스를 scan하면서
	 	서버가 시작될 때 비효일적인 기능을 수행하는 것을 방지하기 위하여
	 	scan 범위를 c.c.h.controller, c.c.h.service 로 제한해주는 것이 좋다.  
	  -->
	<context:component-scan base-package="com.callor.hello.controller" />
	<context:component-scan base-package="com.callor.hello.service" />
	
	
	
</beans:beans>
