<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.callor.score.dao.ext.ScoreDao">

	<!-- 아니 resultType Integer같은 것도 기본타입이라 안써도된다던대 오류남
	최신버전이라 그런것 같다고 한다. ㄱ- -->
	<!-- wrapper class, primitive type...중에 wrapper class 여야 되는 것 같대-->
	<select id="scoreCount" resultType="Integer">
		SELECT COUNT(*) FROM tbl_score
		WHERE sc_stnum = #{sc_stnum} 
		<!--  매개변수가 1개일 경우,  
		Dao에서 지정한 매개변수 이름이랑 여기랑이름이 달라도 된다. -->
	</select>
	<select id="scoreSum" resultType="Integer">
		SELECT COUNT(sc_score) FROM tbl_score
		WHERE sc_stnum = #{sc_stnum}
	</select>

	<select id="selectAll" resultType="ScoreVO">
		SELECT * FROM tbl_score
	</select>
	<select id="findById" resultType="ScoreVO">
		SELECT * FROM tbl_score WHERE sc_seq = #{sc_seq} 
		<!--  다만 VO에 있는 변수일 경우 이름이 꼭 같아야한다 -->
	</select>
	
	<select id="selectViewAll" resultType="ScoreDTO">
		SELECT sc_seq,
				sc_stnum,
				ST.st_name sc_stname,
				sc_sbcode,
				SB.sb_name sc_sbname,
				sc_score
		FROM tbl_score SC
			LEFT JOIN tbl_student ST
				ON SC.sc_stnum = ST.st_num
			LEFT JOIN tbl_subject SB
				ON SC.sc_sbcode = SB.sb_code
		ORDER BY sc_stnum, sc_sbcode
				
	</select>
	
	<select id="selectSubjectAndScore" resultType="SubjectAndScoreDTO">
		SELECT 
				SB.sb_code AS ss_code, 
				SB.sb_name AS ss_stname, 
				SB.sb_prof AS ss_prof,
				SC.sc_stnum AS ss_stnum, 
				SC.sc_score AS ss_score
		FROM tbl_subject SB
			LEFT JOIN tbl_score SC
				ON SC.sc_sbcode = SB.sb_code
		        AND SC.sc_stnum = #{st_num}
		LIMIT 5
	</select>
	
	<insert id="insert" parameterType="ScoreVO">
		INSERT INTO tbl_score(
				sc_stnum, sc_sbcode, sc_score 
		)VALUES(
			#{sc_stnum}, #{sc_sbcode}, #{sc_score} 
		)
	</insert>
	<insert id="insertOrUpdate">
		INSERT INTO tbl_score(sc_stnum, sc_sbcode, sc_score)
		VALUES(#{st_num}, #{sc_sbcode}, #{sc_score})
		
		ON DUPLICATE KEY UPDATE
		sc_score = #{sc_score}
	</insert>
	<!--  mysql 만의 코드 두가지를 비교해서.. 뭘... 하면 업데이트하고 아니면 업데이트안한다 -->
	
	
	
	<!-- SQL문을 마음껏 써도됨. 대신 새미콜론(;) 은 빼야함! -->
	<!-- 칼럼명은 대소문자 상관x VALUES안의 #{} 사이에는 무조건 소문자 -->
	<!-- VALUES에 있는 것은 VO에 들어있는 변수명으로 -->
	
	<!-- ? 대신에 #{}에 알아서 StudentVO에 맞춰서 값을 setting 해라 
		sessionFactory에서 다 해줌 -->
	
	<update id="update" parameterType="ScoreVO">
		UPDATE tbl_score SET
			sc_stnum		= #{sc_stnum},
			sc_sbcode		= #{sc_sbcode},
			sc_score	= #{sc_score},
		WHERE sc_seq	= #{sc_seq}	
	</update>
		
	<delete id="delete" parameterType="String"> <!-- parameterType="String"이거 안적어도됨. 디폴드인듯. -->
		DELETE FROM tbl_score WHERE sc_seq = #{sc_seq}
	</delete>
</mapper>