<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<c:set var = "rootPath" value="${pageContext.request.contextPath}"/>
<style>


	nav#main_nav {
		background-color: blue;
		color: white;
		
	}
	
	nav#main_nav ul {
		list-style: none;
		display: flex;
	}
	
	/*
		ul li tag를 메뉴 등으로 설정할 경우
		기본값으로 하면 각 메뉴들이 다닥다닥 붙게되어 보기가 싫다.
		이때, 다음 두가지 방법으로 보기 좋은 모양을 갖출 수 있다.
		1. li tag에 height, width 값을 주어 
			간격을 적절히 설정하는 방법
		2. li tag에 padding 을 넣는 방법
		
		1번 방법을 사용하면 
		hover 등을 설정했을 때 li와 ul tag 사이에서 간격등이 나타나는 
		경우가 발생할 수 있다. 
		
		2번 방법을 사용하면
		다른 처리를 하지 않아도 비교적 깔끔한 모양을 얻을 수 있다. 
	*/
	nav#main_nav li { /* 네비게이션은 padding을 주는 게 좋다. */
		padding: 5px 12px; /* top,bottom: 5px / left,right: 12px */
		transition: 0.5s;
	}
	
	nav#main_nav li:first-child {
		margin-left: 15px; 
	}

	/* 이것도 실행하면 가운데에 온대!	
	nav#main_nav li:nth-of-type(3){
		margin-left: auto;
	}*/
	
	/* 
	flex-item 의 특정한 요소의 margin-left를 auto로 지정하면
	해당 요소부터 오른쪽으로 밀리는 layout을 만들 수 있다.
	*/
	nav#main_nav li:nth-of-type(5){
		margin-left: auto;
		/* 그 요소부터 오른쪽에 붙게된다.*/
		/* 왼쪽 margin을 적절하게 주는 것!*/
	}
	
	nav#main_nav li:hover {
		background-color: #999;
	}
	
	/* 
	아래는 home.jsp에서 중간에 이미지를 표현하는 부분의 CSS인데
	rootPath 변수 사용관계로 별도의 main_home.css에 둘 수 없어서
	여기에 둔다.
	*/
	/* 
	어떤 요소의 순서대로 속성을 지정할때 
	nth-child(순서), nth-of-type(순서) 두가지를 사용할 수 있다.
	
	다음과 같이 tag가 구성되어 있을 때
		<div>
			<p>1 번
			<p>2 번
			<div>3 번
			<p>4 번
		</div>
	
	nth-child는 무조건 포함된 tag에 모두 일련번호를 부여한다.
	div p:nth-child(4) : <p>4 tag에 대하여 
			// 중간에 div가 있어도 div에 일련번호를 부여해버려서
			// <p>4 가 선택된다
			
	nth-of-type는 포함된 tag중에 지정한 tag만 일련번호를 부여한다.
	div p:nth-child(3) : <p> 4 tag에 대하여
	
	=> 아래것이 최신버전! 이걸써보자
	
	 */
	section#ad_sec article:nth-of-type(1){
		background:url("${rootPath}/static/images/ad_01.jpg") no-repeat;
		/*
		가상클래스에 background 이미지를 설정한 후 size를 적용하는 방법
		첫번째 방법
		*/
		background-image: 100% 100%;
	}
	section#ad_sec article:nth-of-type(2){
		background:url("${rootPath}/static/images/ad_02.jpg") no-repeat;
	}
	section#ad_sec article:nth-of-type(3){
		background:url("${rootPath}/static/images/ad_03.jpg") no-repeat;
	}
	section#ad_sec article:nth-of-type(4){
		background:url("${rootPath}/static/images/ad_04.jpg") no-repeat;
	}
	section#ad_sec article:nth-of-type(5){
		background:url("${rootPath}/static/images/ad_05.jpg") no-repeat;
	}
	
	/* 
	가상클래스를 사용할때 위치값[nth-of-type(위치)] 지정하여
	style을 지정하는데
	전역 시스템 변수인 n 이 존재한다.
	n은 style의 가상클래스에서 사용하는 변수로 '모든 것'이라는 의미
	*/
	section#ad_sec article:nth-of-type(n){
		background-size: 100% 100%;
	}
	
</style>

<script>
	// jsp의 el tag의 변수를 js 변수로 다시 선언하기
	// var 전역변수, 위치에 관계없이 어디서나 읽을 수 있는 변수
	// (var 사용을 권장하지 않지만 전역변수에는 써야한다!)
	// var rootPath = "/jdbc"
	var rootPath = "${rootPath}"; // 이제 js파일에서도 읽을 수 있게 된다!
</script>
<!-- 여기 버전을 바꿔주면 script 수정후 바로 적용이 된다. -->
<script src="${rootPath}/static/js/main_nav.js?ver=2021-06-17-001"></script> 
	<header>
		<h1>도서정보 관리 2021</h1>
		<p>빛고을 총판 도서관리 시스템 2021 v1</p>
	</header>
	<nav id="main_nav">
		<ul>
			<li>HOME</li>
			<li>도서정보</li>
			<li>출판사정보</li>
			<li>저자정보</li>

			<%-- 
			USERVO 속성에는 
			정상인증된 로그인한 사용자의 정보가 담겨 있게 된다.
			이 정보는 현재 서비스를 계속 사용하는 동안에는
			언제든지 어디서든지(어떤 jsp에서든지) 
			값을 사용(조회, 읽기)할 수 있다. 
			--%>
			<c:if test="${empty USERVO}">
			<li>로그인</li>
			<li>회원가입</li>
			</c:if>
			
			<c:if test="${not empty USERVO}">
			<li>로그아웃</li>
			<li id="mypage">${USERVO.username } 님 반갑습니다.</li>
			</c:if>
			
			
		</ul>
	</nav>